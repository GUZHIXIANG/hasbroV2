"""
Django settings for gallant project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import sys
from importlib import reload
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0,os.path.join(BASE_DIR,'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'd@ak!_gk1+&#qyjr1g@g-@z*v1u!^h^8_o-njfti65jp&s6vw*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'xadmin',
    'crispy_forms',
    'reversion',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'drf_yasg',
    'django_filters',
    'stdimage',
    'wechatapp.apps.WechatappConfig',
    'wechat.apps.WechatConfig',
    'product.apps.ProductConfig',
    'activity.apps.ActivityConfig',
    'store.apps.StoreConfig',
    'area.apps.AreaConfig',
    'user.apps.UserConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'request_logging.middleware.LoggingMiddleware',
]

ROOT_URLCONF = 'gallant.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gallant.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# 客户正式数据库
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'hasbro',
#         'USER':'hasbro',
#         'PASSWORD':'1234@Pass',
#         'HOST':'rm-m5e58805615eiutug125010.mysql.rds.aliyuncs.com',
#         'PORT':'3306',
#         'OPTIONS': {
#             "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
#         }
#     }
# }  

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# TODO(GU)  重载用户模型
AUTH_USER_MODEL = 'user.UserProfile'


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

SESSION_ENGINE = 'django.contrib.sessions.backends.db'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media/")

REST_FRAMEWORK = {    
    "DEFAULT_RENDERER_CLASSES": (
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ),
    # 'DEFAULT_PAGINATION_CLASS':'rest_framework.pagination.PageNumberPagination', # 分页,
    # 设置全局过滤引擎
    'DEFAULT_FILTER_BACKENDS':[
                                    # 设置排序过滤引擎
                                    'rest_framework.filters.OrderingFilter',
                                    # 设置搜索过滤引擎
                                    'rest_framework.filters.SearchFilter',
                                    # 设置查询过滤引擎
                                    'django_filters.rest_framework.backends.DjangoFilterBackend'
                                ],

}


# LOGGING settings
# XXX(GU)  日志管理冗余严重需要改进，目前全部废除
LOG_DIR = BASE_DIR + "/log"

# XXX(GU)   解决ascii编译问题
# import sys,codecs
# sys.stdout = codecs.getwriter("utf-8")(sys.stdout.detach())
# reload(sys)
# sys.setdefaultencoding("utf-8")
