# Generated by Django 2.2.7 on 2020-03-13 09:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(max_length=100, unique=True, verbose_name='活动名')),
                ('activity_descripation', models.TextField(blank=True, verbose_name='活动描述')),
                ('activity_start_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='开始时间')),
                ('activity_end_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='结束时间')),
                ('activity_create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('activity_operate_time', models.DateTimeField(auto_now=True, verbose_name='操作时间')),
            ],
            options={
                'verbose_name': '活动信息',
                'verbose_name_plural': '活动信息管理',
            },
        ),
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(max_length=16, unique=True, verbose_name='活动类型')),
                ('type_description', models.CharField(blank=True, max_length=100, null=True, verbose_name='类型描述')),
            ],
            options={
                'verbose_name': '活动类型',
                'verbose_name_plural': '活动类型管理',
            },
        ),
        migrations.CreateModel(
            name='Areas',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='行政编号')),
                ('name', models.CharField(max_length=20, verbose_name='行政区划名')),
                ('parent_id', models.CharField(max_length=20, verbose_name='上级行政编号')),
                ('type', models.IntegerField(default=0, verbose_name='行政等级')),
            ],
            options={
                'verbose_name': 'Areas',
                'verbose_name_plural': '行政区划表',
                'db_table': 'wechatapp',
            },
        ),
        migrations.CreateModel(
            name='ProductBaseInfo',
            fields=[
                ('productId', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='货号')),
                ('productName', models.CharField(max_length=255, verbose_name='商品名称')),
                ('systemCode', models.BigIntegerField(blank=True, null=True, verbose_name='系统编码')),
                ('barCode', models.BigIntegerField(blank=True, null=True, verbose_name='条形编码')),
                ('color', models.CharField(blank=True, max_length=255, null=True, verbose_name='颜色')),
                ('norms', models.CharField(blank=True, max_length=255, null=True, verbose_name='规格')),
                ('weight', models.IntegerField(blank=True, null=True, verbose_name='重量')),
                ('price', models.IntegerField(verbose_name='价格')),
                ('description', models.TextField(blank=True, null=True, verbose_name='商品详情')),
                ('brief', models.TextField(blank=True, default='这里是商品简介', verbose_name='商品简介')),
                ('brand', models.TextField(blank=True, default='这里是商品牌', verbose_name='品牌')),
                ('smallurl', stdimage.models.StdImageField(blank=True, default='', upload_to='ProductPreViewPic', verbose_name='图片路径')),
                ('quantity', models.IntegerField(blank=True, default=500, verbose_name='虚拟库存')),
                ('shell', models.CharField(choices=[('on', '上架'), ('off', '下架')], default='on', max_length=3, verbose_name='货架')),
            ],
            options={
                'verbose_name': '商品详情',
                'verbose_name_plural': '商品详情管理',
            },
        ),
        migrations.CreateModel(
            name='PType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='类型')),
                ('desc', models.IntegerField(blank=True, choices=[(1, '一级分类'), (2, '二级分类'), (3, '三级分类')], verbose_name='属性')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('operate_time', models.DateTimeField(auto_now=True, verbose_name='操作时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wechatapp.PType', verbose_name='父类型')),
            ],
            options={
                'verbose_name': '商品类型*',
                'verbose_name_plural': '商品类型管理*',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(max_length=255, unique=True, verbose_name='门店名')),
                ('store_telephone', models.CharField(max_length=100, verbose_name='门店电话')),
                ('store_address', models.TextField(verbose_name='门店地址')),
                ('store_area', models.CharField(blank=True, max_length=100, verbose_name='门店商区')),
                ('store_longitude', models.DecimalField(blank=True, decimal_places=16, max_digits=22, null=True, verbose_name='门店经度')),
                ('store_latitude', models.DecimalField(blank=True, decimal_places=16, max_digits=22, null=True, verbose_name='门店纬度')),
                ('store_create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('store_operate_time', models.DateTimeField(auto_now=True, verbose_name='操作时间')),
            ],
            options={
                'verbose_name': '门店信息',
                'verbose_name_plural': '门店信息管理',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='姓名')),
                ('age', models.IntegerField(verbose_name='年龄')),
                ('sex', models.IntegerField(choices=[(0, '未知'), (1, '男'), (2, '女')], default=0, verbose_name='性别')),
            ],
            options={
                'verbose_name': 'Test',
                'verbose_name_plural': '测试用例',
            },
        ),
        migrations.CreateModel(
            name='Test4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=13, verbose_name='权限')),
            ],
            options={
                'verbose_name': 'Test4',
                'verbose_name_plural': '测试用例5',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='类别名')),
                ('desc', models.CharField(max_length=100, verbose_name='类别描述')),
            ],
            options={
                'verbose_name': 'Type',
                'verbose_name_plural': '测试用例3',
            },
        ),
        migrations.CreateModel(
            name='Test41',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wechatapp.Test4')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wechatapp.Test')),
            ],
            options={
                'verbose_name': 'Test41',
                'verbose_name_plural': '测试用例5-1',
            },
        ),
        migrations.AddField(
            model_name='test4',
            name='user',
            field=models.ManyToManyField(through='wechatapp.Test41', to='wechatapp.Test'),
        ),
        migrations.CreateModel(
            name='Test3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=13, verbose_name='分组')),
                ('user', models.ManyToManyField(to='wechatapp.Test')),
            ],
            options={
                'verbose_name': 'Test3',
                'verbose_name_plural': '测试用例4',
            },
        ),
        migrations.CreateModel(
            name='Test2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=13, verbose_name='手机号')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test2', to='wechatapp.Test')),
            ],
            options={
                'verbose_name': 'Test2',
                'verbose_name_plural': '测试用例2',
            },
        ),
        migrations.AddField(
            model_name='test',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wechatapp.Type'),
        ),
        migrations.CreateModel(
            name='SignUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signup_name', models.CharField(blank=True, max_length=128, verbose_name='参与者姓名')),
                ('signup_phone', models.CharField(blank=True, max_length=128, verbose_name='参与者电话')),
                ('signup_create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('signup_operate_time', models.DateTimeField(auto_now=True, verbose_name='操作时间')),
                ('activity', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='wechatapp.Activity', verbose_name='报名活动')),
                ('store', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='wechatapp.Store', verbose_name='活动门店')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '报名信息',
                'verbose_name_plural': '报名信息查看',
            },
        ),
        migrations.CreateModel(
            name='PTypePoster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', stdimage.models.StdImageField(default='', upload_to='PTypeImage', verbose_name='图片路径')),
                ('text', models.CharField(default='', max_length=50, verbose_name='图片配文')),
                ('ptype', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='type_poster', to='wechatapp.PType', verbose_name='商品类型')),
            ],
            options={
                'verbose_name': '商品类型海报*',
                'verbose_name_plural': '商品类型海报管理*',
            },
        ),
        migrations.CreateModel(
            name='PTypeImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', stdimage.models.StdImageField(default='', upload_to='PTypeImage', verbose_name='图片路径')),
                ('ptype', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='type_image', to='wechatapp.PType', verbose_name='商品类型')),
            ],
            options={
                'verbose_name': '商品类型图标*',
                'verbose_name_plural': '商品类型图标管理*',
            },
        ),
        migrations.CreateModel(
            name='PTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='标签名称')),
                ('description', models.CharField(max_length=100, verbose_name='标签描述')),
                ('product', models.ManyToManyField(blank=True, null=True, related_name='tags', to='wechatapp.ProductBaseInfo', verbose_name='标注商品')),
            ],
            options={
                'verbose_name': '商品标签*',
                'verbose_name_plural': '商品标签管理*',
            },
        ),
        migrations.CreateModel(
            name='ProductUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', stdimage.models.StdImageField(default='', upload_to='img', verbose_name='图片路径')),
                ('productbaseinfo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='url', to='wechatapp.ProductBaseInfo', verbose_name='商品')),
            ],
            options={
                'verbose_name': '商品详情图片',
                'verbose_name_plural': '商品详情图片管理',
            },
        ),
        migrations.AddField(
            model_name='productbaseinfo',
            name='productType',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='product', to='wechatapp.PType', verbose_name='商品分类'),
        ),
        migrations.CreateModel(
            name='MyTrolly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nums', models.IntegerField(default=1, verbose_name='加购数量')),
                ('checkbox', models.BooleanField(choices=[(0, '未选中'), (1, '选中')], default=False)),
                ('productbaseinfo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='wechatapp.ProductBaseInfo', verbose_name='加购商品')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userid', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '购物车',
                'verbose_name_plural': '购物车信息查看',
            },
        ),
        migrations.CreateModel(
            name='AdvPicModel',
            fields=[
                ('order', models.IntegerField(primary_key=True, serialize=False, verbose_name='序号')),
                ('url', stdimage.models.StdImageField(default='', upload_to='adv', verbose_name='首页广告轮播图')),
                ('productbaseinfo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='wechatapp.ProductBaseInfo')),
            ],
            options={
                'verbose_name': '广告轮播管理',
                'verbose_name_plural': '广告轮播管理',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10, verbose_name='联系人')),
                ('mobile', models.CharField(blank=True, max_length=20, verbose_name='手机号')),
                ('address', models.CharField(blank=True, max_length=256, verbose_name='详细地址')),
                ('is_default', models.BooleanField(choices=[(False, '否'), (True, '是')], default=False, verbose_name='默认设置')),
                ('signup_create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('signup_operate_time', models.DateTimeField(auto_now=True, verbose_name='操作时间')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city', to='wechatapp.Areas')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='district', to='wechatapp.Areas')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='province', to='wechatapp.Areas')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='oldadress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': '收件地址信息表',
            },
        ),
        migrations.CreateModel(
            name='ActivityText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='文本标题')),
                ('text', models.TextField(verbose_name='文本正文')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_text', to='wechatapp.Activity')),
            ],
            options={
                'verbose_name': '活动文本',
                'verbose_name_plural': '活动文本管理',
            },
        ),
        migrations.CreateModel(
            name='ActivityImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', stdimage.models.StdImageField(default='', upload_to='ActivityPoster', verbose_name='活动图片')),
                ('image_description', models.CharField(blank=True, max_length=100, null=True, verbose_name='图片描述')),
                ('image_type', models.IntegerField(choices=[(1, 'type1'), (2, 'type2'), (3, 'type3')], default=1, verbose_name='图片类型')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_image', to='wechatapp.Activity')),
            ],
            options={
                'verbose_name': '活动图片',
                'verbose_name_plural': '活动图片管理',
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='activity_store',
            field=models.ManyToManyField(blank=True, null=True, to='wechatapp.Store', verbose_name='活动门店'),
        ),
        migrations.AddField(
            model_name='activity',
            name='activity_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='wechatapp.ActivityType', verbose_name='活动类型'),
        ),
        migrations.AddField(
            model_name='activity',
            name='super_activity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wechatapp.Activity', verbose_name='父活动'),
        ),
    ]
